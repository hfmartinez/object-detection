name: Upload Python Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff check --output-format=github .
        continue-on-error: false
  # test:
  #   runs-on: ubuntu-latest
  #   needs: pre-commit
  #   services:
  #     db-test:
  #       image: postgres:14.0
  #       env:
  #         POSTGRES_PASSWORD: admin
  #         POSTGRES_USER: admin
  #         POSTGRES_DB: object-detection-test
  #       ports:
  #         - 5500:5432
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.11"
  #     - name: Install poetry
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install poetry
  #     - name: Install dependencies
  #       run: |
  #         poetry install
  #     - name: DB migration
  #       uses: er5bus/alembic-python-action@v1
  #       with:
  #         command: "upgrade head"
  #         working-directory: ./
  #     - name: Run tests
  #       run: poetry run pytest microservices/*/tests/test*
  #       env:
  #         DATABASE_TEST_HOST: ${{ secrets.DATABASE_TEST_HOST }}
  #         DATABASE_TEST_USER: ${{ secrets.DATABASE_TEST_USER }}
  #         DATABASE_TEST_PORT: ${{ secrets.DATABASE_TEST_PORT }}
  #         DATABASE_TEST_NAME: ${{ secrets.DATABASE_TEST_NAME }}
  #         DATABASE_TEST_PASS: ${{ secrets.DATABASE_TEST_PASS }}
  #         DATABASE_HOST: ${{ secrets.DATABASE_TEST_HOST }}
  #         DATABASE_USER: ${{ secrets.DATABASE_TEST_USER }}
  #         DATABASE_PORT: ${{ secrets.DATABASE_TEST_PORT }}
  #         DATABASE_NAME: ${{ secrets.DATABASE_TEST_NAME }}
  #         DATABASE_PASS: ${{ secrets.DATABASE_TEST_PASS }}

  build:
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKERHUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build apigateway and push Docker image
        run: |
          docker buildx create --use
          docker buildx build \
            --file ./microservices/api_gateway/Dockerfile \
            --tag ${{ secrets.DOCKERHUB_ORG }}/object_detection:api_gateway \
            --push ./microservices/api_gateway/
      - name: Build Object Detection and push Docker image
        run: |
          docker buildx create --use
          docker buildx build \
            --file ./microservices/object_detection/Dockerfile \
            --tag ${{ secrets.DOCKERHUB_ORG }}/object_detection:object-detection \
            --push ./microservices/object_detection/
      - name: Build Reports and push Docker image
        run: |
          docker buildx create --use
          docker buildx build \
            --file ./microservices/reports/Dockerfile \
            --tag ${{ secrets.DOCKERHUB_ORG }}/object_detection:reports \
            --push ./microservices/reports/
      - name: Build Client and push Docker image
        run: |
          docker buildx create --use
          docker buildx build \
            --file ./client/Dockerfile \
            --tag ${{ secrets.DOCKERHUB_ORG }}/object_detection:client \
            --push ./client/

    env:
      DOCKER_CLI_EXPERIMENTAL: enabled
      DOCKER_BUILDKIT: 1
